#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {
    conditional_layers {
        compatible = "zmk,conditional-layers";
        tri_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
};

/ {
    combos {
        compatible = "zmk,combos";
        combo_esc {
            timeout-ms = <50>;
            key-positions = <11 12>;
            bindings = <&kp ESC>;
        };
        combo_tab {
            timeout-ms = <50>;
            key-positions = <21 22>;
            bindings = <&kp TAB>;
        };
        combo_bspc {
            timeout-ms = <50>;
            key-positions = <17 18>;
            bindings = <&kp BSPC>;
        };
        combo_enter {
            timeout-ms = <50>;
            key-positions = <27 28>;
            bindings = <&kp ENTER>;
        };
    };
};

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer { 
            bindings = <
                &kp Q   &kp W   &kp E   &kp R   &kp T          &kp Y       &kp U   &kp I       &kp O     &kp P
                &kp A   &kp S   &kp D   &kp F   &kp G          &kp H       &kp J   &kp K       &kp L     &kp SEMI
                &kp Z   &kp X   &kp C   &kp V   &kp B          &kp N       &kp M   &kp COMMA   &kp DOT   &kp FSLH
                                        &mo 1   &kp LSHFT      &kp SPACE   &mo 2
            >;
        };
				nav {
					bindings = <
                &bt BT_SEL 0   &bt BT_SEL 1   &bt BT_SEL 2   &bt BT_SEL 3   &bt BT_SEL 4      &sys_reset    &kp PG_UP   &kp HOME   &kp C_BRI_UP   &kp C_VOL_UP
                &sk LGUI       &sk LALT       &sk LSHFT      &sk LCTRL      &trans            &kp LEFT      &kp DOWN    &kp UP     &kp RIGHT      &kp C_MUTE
                &bt BT_CLR     &kp C_PREV     &kp C_PP       &kp C_NEXT     &trans            &bootloader   &kp PG_DN   &kp END    &kp C_BRI_DN   &kp C_VOL_DN
																					                   &trans         &trans            &trans        &trans
					>;
				};
				sym {
					bindings = <
                &kp SQT    &kp LBKT    &kp LBRC    &kp LPAR    &kp PRCNT      &kp GRAVE   &kp RPAR    &kp RBRC    &kp RBKT   &kp BSLH
                &kp STAR   &kp MINUS   &kp PLUS    &kp EQUAL   &kp PIPE       &kp CARET   &sk LCTRL   &sk LSHFT   &sk LALT   &sk LGUI
                &kp DQT    &kp HASH    &kp UNDER   &kp TILDE   &trans         &trans      &kp DLLR    &kp AMPS    &kp EXCL   &kp AT  
																					         &trans      &trans         &trans      &trans
					>;
				};
				num {
					bindings = <
                &trans     &trans     &kp DOT     &kp N0      &trans      &trans   &kp N1   &kp N2   &kp N3   &trans
                &sk LGUI   &sk LALT   &sk LSHFT   &sk LCTRL   &trans      &trans   &kp N4   &kp N5   &kp N6   &trans
                &trans     &trans     &trans      &trans      &trans      &trans   &kp N7   &kp N8   &kp N9   &trans
																									&trans      &trans      &trans   &trans
					>;
				};
    };
 };
